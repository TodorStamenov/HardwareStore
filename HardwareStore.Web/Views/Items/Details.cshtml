@model ItemDetailsViewModel

@{
    ViewBag.Title = "Details";
    string previouseDisabled = Model.CurrentPage == 1 ? "disabled" : string.Empty;
    string nextDisabled = Model.CurrentPage == Model.TotalPages ? "disabled" : string.Empty;
}

<div class="row">
    <br />
    <div class="col-md-3">
        @Html.Action("Invoke", "Menu", new { subCategoryId = Model.Item.SubCategoryId })
    </div>
    <div class="col-md-9">
        <div class="panel panel-default site-panel">
            <h3>@Model.Item.Name</h3>
            <img class="site-image" src="@Model.Item.Image" alt="Item Image" width="250" height="250" />
            <table class="table table-hover table-striped" style="display:inline">
                <tr>
                    <td>Price:</td>
                    <td>@Model.Item.Price&euro;</td>
                </tr>
                @if (Model.Item.Discount != 0)
                {
                    <tr>
                        <td>Discount:</td>
                        <td>@Model.Item.Discount%</td>
                    </tr>
                    <tr>
                        <td>New Price:</td>
                        <td>@Model.Item.PriceWithDiscount&euro;</td>
                    </tr>
                }
                <tr>
                    <td>Quantity:</td>
                    <td>
                        @if (Model.Item.Quantity <= 0)
                        {
                            @: Out of Stock
                        }
                        else
                        {
                            @Model.Item.Quantity
                        }
                    </td>
                </tr>
                <tr>
                    <td>Warrenty:</td>
                    @if (Model.Item.WarrantyLength <= 0)
                    {
                        <td>No Warrenty</td>
                    }
                    else
                    {
                        <td>@Model.Item.WarrantyLength Months</td>
                    }
                </tr>
                <tr>
                    <td>Rating:</td>
                    @if (Model.Item.Rating <= 0)
                    {
                        <td>Not Rated</td>
                    }
                    else
                    {
                        <td>@Model.Item.Rating/4</td>
                    }
                </tr>
                <tr>
                    <td>Date Added:</td>
                    <td>@Model.Item.UploadDate.ToShortDateString()</td>
                </tr>
            </table>

            <div class="clearfix"></div>
            <hr />
            <div>
                <h4>Description:</h4>
                @Model.Item.Description
            </div>
            @if (User.Identity.IsAuthenticated)
            {
                <hr />
                <a class="btn btn-success" href="@Url.Action("Create", "Reviews", new { itemId = Model.Item.Id, page = Model.CurrentPage })">
                    Review
                </a>
                <div class="pull-right">
                    @if (User.IsInRole(CommonConstants.ModeratorRole))
                    {
                        <a class="btn btn-default" href="@Url.Action("Edit", "Items", new { id = Model.Item.Id, area = WebConstants.ModeratorArea })">
                            Edit
                        </a>
                    }
                </div>
            }
        </div>
        @if (Model.Reviews.Any())
        {
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link @previouseDisabled" href="@Url.Action("Details", "Items", new { area = string.Empty, id = Model.Item.Id, page = Model.PrevPage})" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>
                @for (int i = Model.FirstPage; i <= Model.LastPage; i++)
                {
                    <li class="page-item @(Model.CurrentPage == i ? "active" : string.Empty)">
                        <a class="page-link @(Model.CurrentPage == i ? "disabled" : string.Empty)" href="@Url.Action("Details", "Items", new { area = string.Empty, id = Model.Item.Id, page = i})">@i</a>
                    </li>
                }
                <li class="page-item">
                    <a class="page-link @nextDisabled" href="@Url.Action("Details", "Items", new { area = string.Empty, id = Model.Item.Id, page = Model.NextPage})" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </a>
                </li>
            </ul>
        }

        @foreach (var review in Model.Reviews)
        {
            <div class="panel panel-default site-panel">
                <img class="site-image" src="@review.AuthorImage" alt="Author Image" width="30" height="30" />
                @review.Author
                <div class="pull-right">
                    @for (int i = 0; i < review.Mark; i++)
                    {
                        <span class="glyphicon glyphicon-star text-primary"></span>
                    }
                </div>
                <hr />
                <p>@review.Content</p>
                <hr />
                <span class="glyphicon glyphicon-calendar site-glyphicon"></span>
                @review.DateAdded
                @if (User.Identity.IsAuthenticated || User.IsInRole(CommonConstants.ModeratorRole))
                {
                    <hr />
                    <a class="btn btn-success" href="@Url.Action("Create", "Comments", new { id = review.Id, itemId = Model.Item.Id, page = Model.CurrentPage })">
                        Comment
                    </a>
                    <div class="pull-right">
                        @if (review.IsOwner || User.IsInRole(CommonConstants.ModeratorRole))
                        {
                            <a class="btn btn-default" href="@Url.Action("Edit", "Reviews", new { id = review.Id, itemId = Model.Item.Id, page = Model.CurrentPage })">
                                Edit
                            </a>
                        }
                        @if (User.IsInRole(CommonConstants.ModeratorRole))
                        {
                            <a class="btn btn-default" href="@Url.Action("Delete", "Reviews", new { id = review.Id, itemId = Model.Item.Id, page = Model.CurrentPage, area = WebConstants.ModeratorArea })">
                                Delete
                            </a>
                        }
                    </div>
                    <div class="clearfix"></div>
                }
            </div>

            foreach (var comment in review.Comments)
            {
                <div class="col-md-offset-1 panel panel-default site-panel">
                    <img class="site-image" src="@comment.AuthorImage" alt="Author Image" width="30" height="30" />
                    @comment.Author
                    <hr />
                    <p>@comment.Content</p>
                    <hr />
                    <span class="glyphicon glyphicon-calendar site-glyphicon"></span>
                    @comment.DateAdded
                    @if (comment.IsOwner || User.IsInRole(CommonConstants.ModeratorRole))
                    {
                        <div class="pull-right">
                            <a class="btn btn-default" href="@Url.Action("Edit", "Comments", new { id = comment.Id, itemId = Model.Item.Id, page = Model.CurrentPage })">
                                Edit
                            </a>
                            @if (User.IsInRole(CommonConstants.ModeratorRole))
                            {
                                <a class="btn btn-default" href="@Url.Action("Delete", "Comments", new { id = comment.Id, itemId = Model.Item.Id, page = Model.CurrentPage, area = WebConstants.ModeratorArea })">
                                    Delete
                                </a>
                            }
                        </div>
                        <div class="clearfix"></div>
                    }
                </div>
            }
        }

        @if (Model.Reviews.Any())
        {
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link @previouseDisabled" href="@Url.Action("Details", "Items", new { area = string.Empty, id = Model.Item.Id, page = Model.PrevPage})" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only">Previous</span>
                    </a>
                </li>
                @for (int i = Model.FirstPage; i <= Model.LastPage; i++)
                {
                    <li class="page-item @(Model.CurrentPage == i ? "active" : string.Empty)">
                        <a class="page-link @(Model.CurrentPage == i ? "disabled" : string.Empty)" href="@Url.Action("Details", "Items", new { area = string.Empty, id = Model.Item.Id, page = i})">@i</a>
                    </li>
                }
                <li class="page-item">
                    <a class="page-link @nextDisabled" href="@Url.Action("Details", "Items", new { area = string.Empty, id = Model.Item.Id, page = Model.NextPage})" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only">Next</span>
                    </a>
                </li>
            </ul>
        }
    </div>
</div>